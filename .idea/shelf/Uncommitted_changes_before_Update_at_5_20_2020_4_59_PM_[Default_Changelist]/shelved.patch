Index: c4-samples/src/main/java/aut/utcluj/isp/ex4/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package aut.utcluj.isp.ex4;\r\n\r\nimport javax.jws.soap.SOAPBinding;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * @author stefan\r\n */\r\npublic class User {\r\n    private UserCart userCart;\r\n    private Double userMoney;\r\n\r\n    public User(Double userMoney) {\r\n        this.userMoney = userMoney;\r\n        userCart = new UserCart();\r\n    }\r\n\r\n    public UserCart getUserCart() {\r\n        return userCart;\r\n    }\r\n\r\n    public Double getUserMoney() {\r\n        return userMoney;\r\n    }\r\n\r\n    public void setUserCart(UserCart userCart) {\r\n        this.userCart = userCart;\r\n    }\r\n\r\n    public void setUserMoney(Double userMoney) {\r\n        this.userMoney = userMoney;\r\n    }\r\n\r\n    /**\r\n     * Add product to the cart\r\n     *\r\n     * @param product  - product to be added\r\n     * @param quantity - quantity to be added\r\n     */\r\n    public void addProductToCart(Product product, int quantity) {\r\n        userCart.addProductToCart(product, quantity);\r\n    }\r\n\r\n    /**\r\n     * Remove product from cart\r\n     * An {@link ProductNotFoundException} exception should be thrown if no product with desired productId is found\r\n     *\r\n     * @param productId - unique product id\r\n     */\r\n    public void removeProductFromCart(final String productId) {\r\n        try {\r\n            tryRemovingProduct(productId);\r\n        } catch (ProductNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void tryRemovingProduct(final String productID) throws ProductNotFoundException {\r\n        boolean found = false;\r\n        for (Product product : userCart.getCardProducts()) {\r\n            if (product.getProductId().equals(productID)) {\r\n                userCart.removeProductFromCart(productID);\r\n                found = true;\r\n            }\r\n            if (!found) {\r\n                throw new ProductNotFoundException();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Submit cart details\r\n     * Total price of the products should be extracted from userMoney\r\n     * If userMoney is less than total price of the products, an {@link NotEnoughMoneyException} exception will be thrown\r\n     * If userMoney is greater or equal to the total price of the products, total price should be extracted from total money and cart to be reset to default values\r\n     */\r\n    public void submitCart() {\r\n        try {\r\n            removeMoney();\r\n        } catch (NotEnoughMoneyException e) {\r\n            System.out.println(\"Not enough money\");\r\n        }\r\n    }\r\n\r\n    public void removeMoney() throws NotEnoughMoneyException {\r\n        if (userMoney < userCart.getTotalPrice()) {\r\n            throw new NotEnoughMoneyException();\r\n        } else {\r\n            userMoney -= userCart.getTotalPrice();\r\n            userCart.resetCart();\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- c4-samples/src/main/java/aut/utcluj/isp/ex4/User.java	(revision eac39978a81d7b61280e0f58fd16cbc1c95de868)
+++ c4-samples/src/main/java/aut/utcluj/isp/ex4/User.java	(date 1589982852268)
@@ -92,5 +92,4 @@
             userCart.resetCart();
         }
     }
-}
-
+}
\ No newline at end of file
Index: c4-samples/src/test/java/aut/utcluj/isp/ex4/UserCartTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package aut.utcluj.isp.ex4;\r\n\r\nimport org.junit.Test;\r\n\r\nimport java.util.List;\r\n\r\nimport static org.junit.Assert.*;\r\n\r\n/**\r\n * @author stefan\r\n */\r\npublic class UserCartTest {\r\n    @Test\r\n    public void testCreate() {\r\n        final UserCart userCart = new UserCart();\r\n        assertNotNull(\"Cart details should not be null\", userCart.getCardProducts());\r\n        assertEquals(\"Default total price should be 0\", 0, userCart.getTotalPrice(), 0);\r\n    }\r\n\r\n    @Test\r\n    public void testAddProductToCart() {\r\n        final Product product = new Product(\"p_1\", 100d);\r\n        final UserCart userCart = new UserCart();\r\n        userCart.addProductToCart(product, 2);\r\n\r\n        assertEquals(\"Cart size should be 2\", 2, userCart.getCardProducts().size());\r\n        assertEquals(\"Total price should be 200\", 200d, userCart.getTotalPrice(), 0);\r\n    }\r\n\r\n    @Test\r\n    public void testRemoveProductFromCart() {\r\n        final Product firstProduct = new Product(\"p_1\", 100d);\r\n        final Product secondProduct = new Product(\"p_2\", 200d);\r\n        final UserCart userCart = new UserCart();\r\n        userCart.addProductToCart(firstProduct, 2);\r\n        userCart.addProductToCart(secondProduct, 2);\r\n\r\n        final List<Product> productsBeforeRemove = userCart.getCardProducts();\r\n        assertEquals(\"Cart size should be 4\", 4, productsBeforeRemove.size());\r\n        userCart.removeProductFromCart(\"p_2\");\r\n        final List<Product> productsAfterRemove = userCart.getCardProducts();\r\n        assertEquals(\"Cart size should be 3\", 3, productsAfterRemove.size());\r\n        assertEquals(\"First product should have p_1 id\", \"p_1\", productsAfterRemove.get(0).getProductId());\r\n        assertEquals(\"Second product should have p_1 id\", \"p_1\", productsAfterRemove.get(1).getProductId());\r\n        assertEquals(\"Third product should have p_2 id\", \"p_2\", productsAfterRemove.get(2).getProductId());\r\n        assertEquals(\"Total price should be 400\", 400d, userCart.getTotalPrice(), 0);\r\n    }\r\n\r\n    @Test(expected = ProductNotFoundException.class)\r\n    public void testRemoveProductFromCartThrowsExceptionWhenNoProductFound() throws ProductNotFoundException{\r\n        final UserCart userCart = new UserCart();\r\n        userCart.removeProductFromCart(\"p_1\");\r\n    }\r\n\r\n    @Test\r\n    public void testGetCartDetails() {\r\n        final Product firstProduct = new Product(\"p_1\", 100d);\r\n        final Product secondProduct = new Product(\"p_2\", 200d);\r\n        final UserCart userCart = new UserCart();\r\n        userCart.addProductToCart(firstProduct, 2);\r\n        userCart.addProductToCart(secondProduct, 1);\r\n\r\n        try {\r\n            final String expectedResult = \"Product id: p_1, Items: 2\\n\" +\r\n                    \"Product id: p_2, Items: 1\\n\" +\r\n                    \"Total price: 400.0\";\r\n            final String cartDetails = ((ICartDetails)userCart).getCartDetails();\r\n            assertNotNull(\"Cart details should not be null\", cartDetails);\r\n            assertEquals(\"Cart details should be the same\", expectedResult, cartDetails);\r\n        } catch (ClassCastException ex) {\r\n            fail(\"Show not fail on casting UserCart instance to ICartDetails\");\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void testResetCart() {\r\n        final Product product = new Product(\"p_1\", 100d);\r\n        final UserCart userCart = new UserCart();\r\n        userCart.addProductToCart(product, 2);\r\n\r\n        final List<Product> productsBeforeReset = userCart.getCardProducts();\r\n        assertEquals(\"2 products in cart\", 2, productsBeforeReset.size());\r\n        assertEquals(\"Total price is 200\", 200d, userCart.getTotalPrice(), 0);\r\n\r\n        userCart.resetCart();\r\n\r\n        final List<Product> productsAfterReset = userCart.getCardProducts();\r\n        assertEquals(\"0 products in cart\", 0, productsAfterReset.size());\r\n        assertEquals(\"Total price is 0\", 0, userCart.getTotalPrice(), 0);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- c4-samples/src/test/java/aut/utcluj/isp/ex4/UserCartTest.java	(revision eac39978a81d7b61280e0f58fd16cbc1c95de868)
+++ c4-samples/src/test/java/aut/utcluj/isp/ex4/UserCartTest.java	(date 1589982930684)
@@ -28,7 +28,7 @@
     }
 
     @Test
-    public void testRemoveProductFromCart() {
+    public void testRemoveProductFromCart(){
         final Product firstProduct = new Product("p_1", 100d);
         final Product secondProduct = new Product("p_2", 200d);
         final UserCart userCart = new UserCart();
@@ -47,7 +47,7 @@
     }
 
     @Test(expected = ProductNotFoundException.class)
-    public void testRemoveProductFromCartThrowsExceptionWhenNoProductFound() throws ProductNotFoundException{
+    public void testRemoveProductFromCartThrowsExceptionWhenNoProductFound(){
         final UserCart userCart = new UserCart();
         userCart.removeProductFromCart("p_1");
     }
Index: c4-samples/src/main/java/aut/utcluj/isp/ex4/UserCart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package aut.utcluj.isp.ex4;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport java.util.List;\r\n\r\n\r\n/**\r\n * @author stefan\r\n */\r\npublic class UserCart {\r\n    private List<Product> cardProducts = new ArrayList<>();\r\n    private double totalPrice;\r\n\r\n    public double getTotalPrice() {\r\n        return totalPrice;\r\n    }\r\n\r\n    public List<Product> getCardProducts() {\r\n        return cardProducts;\r\n    }\r\n\r\n    public UserCart() {\r\n        this.cardProducts = new ArrayList<>();\r\n        this.totalPrice = 0;\r\n    }\r\n\r\n    /**\r\n     * Add new product to user cart\r\n     *\r\n     * @param product  - product to be added\r\n     * @param quantity - number of products of the same type to be added\r\n     */\r\n    public void addProductToCart(final Product product, int quantity) {\r\n        for (int i = 0; i < quantity; i++) {\r\n            cardProducts.add(product);\r\n            totalPrice = totalPrice + product.getPrice();\r\n        }\r\n        // totalPrice = totalPrice + product.getPrice() * quantity;\r\n    }\r\n\r\n    /**\r\n     * Remove one product with product id from cart\r\n     * If the product with desired id not found in the card, an {@link ProductNotFoundException} exception will be thrown\r\n     *\r\n     * @param productId - unique product id\r\n     */\r\n    public void removeProductFromCart(final String productId) {\r\n        try {\r\n            tryRemovingProduct(productId);\r\n        } catch (ProductNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void tryRemovingProduct(final String productID) throws ProductNotFoundException {\r\n        boolean found = false;\r\n        for (Product product : cardProducts) {\r\n            if (product.getProductId().equals(productID)) {\r\n                cardProducts.remove(product);\r\n                totalPrice -=product.getPrice();\r\n                found = true;\r\n            }\r\n        }\r\n        if (!found) {\r\n            throw new ProductNotFoundException();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Reset user cart\r\n     * Reset products and total price to default values\r\n     */\r\n    public void resetCart() {\r\n        this.totalPrice = 0;\r\n        this.cardProducts = new ArrayList<>();\r\n    }\r\n\r\n    public void setTotalPrice(double totalPrice) {\r\n        this.totalPrice = totalPrice;\r\n    }\r\n\r\n    public void setCardProducts(List<Product> cardProducts) {\r\n        this.cardProducts = cardProducts;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- c4-samples/src/main/java/aut/utcluj/isp/ex4/UserCart.java	(revision eac39978a81d7b61280e0f58fd16cbc1c95de868)
+++ c4-samples/src/main/java/aut/utcluj/isp/ex4/UserCart.java	(date 1589982866710)
@@ -84,4 +84,4 @@
     public void setCardProducts(List<Product> cardProducts) {
         this.cardProducts = cardProducts;
     }
-}
+}
\ No newline at end of file
